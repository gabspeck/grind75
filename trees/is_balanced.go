package trees

// Given a binary tree, determine if it is height-balanced.
// A height-balanced binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one.
type IsBalancedFunc func(root *TreeNode) bool

func checkHeight(root *TreeNode) int {
	if root == nil {
		return 0
	}

	leftHeight := checkHeight(root.Left)
	if leftHeight == -1 {
		return -1
	}

	rightHeight := checkHeight(root.Right)

	if rightHeight == -1 {
		return -1
	}

	delta := leftHeight - rightHeight
	delta = max(delta, -delta)

	if delta > 1 {
		return -1
	}

	if leftHeight > rightHeight {
		return leftHeight + 1
	}

	return rightHeight + 1

}

// IsBalancedReference is a solution generated by Claude
func IsBalancedReference(root *TreeNode) bool {
	return checkHeight(root) != -1
}
